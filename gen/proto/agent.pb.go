// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v3.21.12
// source: proto/agent.proto

package agent

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TunnelMode int32

const (
	TunnelMode_VERSION_UNSPECIFIED TunnelMode = 0
	TunnelMode_HTTP2               TunnelMode = 1
	TunnelMode_WS                  TunnelMode = 2
)

// Enum value maps for TunnelMode.
var (
	TunnelMode_name = map[int32]string{
		0: "VERSION_UNSPECIFIED",
		1: "HTTP2",
		2: "WS",
	}
	TunnelMode_value = map[string]int32{
		"VERSION_UNSPECIFIED": 0,
		"HTTP2":               1,
		"WS":                  2,
	}
)

func (x TunnelMode) Enum() *TunnelMode {
	p := new(TunnelMode)
	*p = x
	return p
}

func (x TunnelMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TunnelMode) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_agent_proto_enumTypes[0].Descriptor()
}

func (TunnelMode) Type() protoreflect.EnumType {
	return &file_proto_agent_proto_enumTypes[0]
}

func (x TunnelMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TunnelMode.Descriptor instead.
func (TunnelMode) EnumDescriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{0}
}

type RegisterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Token         string                 `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Mode          TunnelMode             `protobuf:"varint,2,opt,name=mode,proto3,enum=TunnelMode" json:"mode,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterRequest) Reset() {
	*x = RegisterRequest{}
	mi := &file_proto_agent_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterRequest) ProtoMessage() {}

func (x *RegisterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterRequest.ProtoReflect.Descriptor instead.
func (*RegisterRequest) Descriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{0}
}

func (x *RegisterRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *RegisterRequest) GetMode() TunnelMode {
	if x != nil {
		return x.Mode
	}
	return TunnelMode_VERSION_UNSPECIFIED
}

type RegisterResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Ok                bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	AssignedSubdomain string                 `protobuf:"bytes,2,opt,name=assigned_subdomain,json=assignedSubdomain,proto3" json:"assigned_subdomain,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *RegisterResponse) Reset() {
	*x = RegisterResponse{}
	mi := &file_proto_agent_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterResponse) ProtoMessage() {}

func (x *RegisterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterResponse.ProtoReflect.Descriptor instead.
func (*RegisterResponse) Descriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{1}
}

func (x *RegisterResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

func (x *RegisterResponse) GetAssignedSubdomain() string {
	if x != nil {
		return x.AssignedSubdomain
	}
	return ""
}

type HeartbeatRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AgentId       string                 `protobuf:"bytes,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeartbeatRequest) Reset() {
	*x = HeartbeatRequest{}
	mi := &file_proto_agent_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeartbeatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatRequest) ProtoMessage() {}

func (x *HeartbeatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatRequest.ProtoReflect.Descriptor instead.
func (*HeartbeatRequest) Descriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{2}
}

func (x *HeartbeatRequest) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

type HeartbeatResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeartbeatResponse) Reset() {
	*x = HeartbeatResponse{}
	mi := &file_proto_agent_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeartbeatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatResponse) ProtoMessage() {}

func (x *HeartbeatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatResponse.ProtoReflect.Descriptor instead.
func (*HeartbeatResponse) Descriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{3}
}

func (x *HeartbeatResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

type StreamChunk struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StreamId      string                 `protobuf:"bytes,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	Payload       []byte                 `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"` // raw bytes
	Fin           bool                   `protobuf:"varint,3,opt,name=fin,proto3" json:"fin,omitempty"`        // indicated EOF for the stream
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamChunk) Reset() {
	*x = StreamChunk{}
	mi := &file_proto_agent_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamChunk) ProtoMessage() {}

func (x *StreamChunk) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamChunk.ProtoReflect.Descriptor instead.
func (*StreamChunk) Descriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{4}
}

func (x *StreamChunk) GetStreamId() string {
	if x != nil {
		return x.StreamId
	}
	return ""
}

func (x *StreamChunk) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *StreamChunk) GetFin() bool {
	if x != nil {
		return x.Fin
	}
	return false
}

type ConnectRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Subdomain     string                 `protobuf:"bytes,1,opt,name=subdomain,proto3" json:"subdomain,omitempty"`
	Token         string                 `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConnectRequest) Reset() {
	*x = ConnectRequest{}
	mi := &file_proto_agent_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectRequest) ProtoMessage() {}

func (x *ConnectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectRequest.ProtoReflect.Descriptor instead.
func (*ConnectRequest) Descriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{5}
}

func (x *ConnectRequest) GetSubdomain() string {
	if x != nil {
		return x.Subdomain
	}
	return ""
}

func (x *ConnectRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type ConnectResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ok            bool                   `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConnectResponse) Reset() {
	*x = ConnectResponse{}
	mi := &file_proto_agent_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectResponse) ProtoMessage() {}

func (x *ConnectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectResponse.ProtoReflect.Descriptor instead.
func (*ConnectResponse) Descriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{6}
}

func (x *ConnectResponse) GetOk() bool {
	if x != nil {
		return x.Ok
	}
	return false
}

type HeaderValues struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Values        []string               `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeaderValues) Reset() {
	*x = HeaderValues{}
	mi := &file_proto_agent_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeaderValues) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeaderValues) ProtoMessage() {}

func (x *HeaderValues) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeaderValues.ProtoReflect.Descriptor instead.
func (*HeaderValues) Descriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{7}
}

func (x *HeaderValues) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

type HttpRequest struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	StreamId      string                   `protobuf:"bytes,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	Method        string                   `protobuf:"bytes,2,opt,name=method,proto3" json:"method,omitempty"`
	Url           string                   `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	Headers       map[string]*HeaderValues `protobuf:"bytes,4,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Body          []byte                   `protobuf:"bytes,5,opt,name=body,proto3" json:"body,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HttpRequest) Reset() {
	*x = HttpRequest{}
	mi := &file_proto_agent_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HttpRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpRequest) ProtoMessage() {}

func (x *HttpRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpRequest.ProtoReflect.Descriptor instead.
func (*HttpRequest) Descriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{8}
}

func (x *HttpRequest) GetStreamId() string {
	if x != nil {
		return x.StreamId
	}
	return ""
}

func (x *HttpRequest) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *HttpRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *HttpRequest) GetHeaders() map[string]*HeaderValues {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *HttpRequest) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

type HttpResponse struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	StreamId      string                   `protobuf:"bytes,1,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	StatusCode    int32                    `protobuf:"varint,2,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`
	Headers       map[string]*HeaderValues `protobuf:"bytes,3,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Body          []byte                   `protobuf:"bytes,4,opt,name=body,proto3" json:"body,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HttpResponse) Reset() {
	*x = HttpResponse{}
	mi := &file_proto_agent_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HttpResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpResponse) ProtoMessage() {}

func (x *HttpResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_agent_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpResponse.ProtoReflect.Descriptor instead.
func (*HttpResponse) Descriptor() ([]byte, []int) {
	return file_proto_agent_proto_rawDescGZIP(), []int{9}
}

func (x *HttpResponse) GetStreamId() string {
	if x != nil {
		return x.StreamId
	}
	return ""
}

func (x *HttpResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *HttpResponse) GetHeaders() map[string]*HeaderValues {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *HttpResponse) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

var File_proto_agent_proto protoreflect.FileDescriptor

const file_proto_agent_proto_rawDesc = "" +
	"\n" +
	"\x11proto/agent.proto\"H\n" +
	"\x0fRegisterRequest\x12\x14\n" +
	"\x05token\x18\x01 \x01(\tR\x05token\x12\x1f\n" +
	"\x04mode\x18\x02 \x01(\x0e2\v.TunnelModeR\x04mode\"Q\n" +
	"\x10RegisterResponse\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok\x12-\n" +
	"\x12assigned_subdomain\x18\x02 \x01(\tR\x11assignedSubdomain\"-\n" +
	"\x10HeartbeatRequest\x12\x19\n" +
	"\bagent_id\x18\x01 \x01(\tR\aagentId\"#\n" +
	"\x11HeartbeatResponse\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok\"V\n" +
	"\vStreamChunk\x12\x1b\n" +
	"\tstream_id\x18\x01 \x01(\tR\bstreamId\x12\x18\n" +
	"\apayload\x18\x02 \x01(\fR\apayload\x12\x10\n" +
	"\x03fin\x18\x03 \x01(\bR\x03fin\"D\n" +
	"\x0eConnectRequest\x12\x1c\n" +
	"\tsubdomain\x18\x01 \x01(\tR\tsubdomain\x12\x14\n" +
	"\x05token\x18\x02 \x01(\tR\x05token\"!\n" +
	"\x0fConnectResponse\x12\x0e\n" +
	"\x02ok\x18\x01 \x01(\bR\x02ok\"&\n" +
	"\fHeaderValues\x12\x16\n" +
	"\x06values\x18\x01 \x03(\tR\x06values\"\xe8\x01\n" +
	"\vHttpRequest\x12\x1b\n" +
	"\tstream_id\x18\x01 \x01(\tR\bstreamId\x12\x16\n" +
	"\x06method\x18\x02 \x01(\tR\x06method\x12\x10\n" +
	"\x03url\x18\x03 \x01(\tR\x03url\x123\n" +
	"\aheaders\x18\x04 \x03(\v2\x19.HttpRequest.HeadersEntryR\aheaders\x12\x12\n" +
	"\x04body\x18\x05 \x01(\fR\x04body\x1aI\n" +
	"\fHeadersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12#\n" +
	"\x05value\x18\x02 \x01(\v2\r.HeaderValuesR\x05value:\x028\x01\"\xe1\x01\n" +
	"\fHttpResponse\x12\x1b\n" +
	"\tstream_id\x18\x01 \x01(\tR\bstreamId\x12\x1f\n" +
	"\vstatus_code\x18\x02 \x01(\x05R\n" +
	"statusCode\x124\n" +
	"\aheaders\x18\x03 \x03(\v2\x1a.HttpResponse.HeadersEntryR\aheaders\x12\x12\n" +
	"\x04body\x18\x04 \x01(\fR\x04body\x1aI\n" +
	"\fHeadersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12#\n" +
	"\x05value\x18\x02 \x01(\v2\r.HeaderValuesR\x05value:\x028\x01*8\n" +
	"\n" +
	"TunnelMode\x12\x17\n" +
	"\x13VERSION_UNSPECIFIED\x10\x00\x12\t\n" +
	"\x05HTTP2\x10\x01\x12\x06\n" +
	"\x02WS\x10\x022s\n" +
	"\aControl\x124\n" +
	"\rRegisterAgent\x12\x10.RegisterRequest\x1a\x11.RegisterResponse\x122\n" +
	"\tHeartbeat\x12\x11.HeartbeatRequest\x1a\x12.HeartbeatResponse2_\n" +
	"\x05Proxy\x12(\n" +
	"\x06Tunnel\x12\f.StreamChunk\x1a\f.StreamChunk(\x010\x01\x12,\n" +
	"\aConnect\x12\x0f.ConnectRequest\x1a\x10.ConnectResponseB\x0fZ\rproto/.;agentb\x06proto3"

var (
	file_proto_agent_proto_rawDescOnce sync.Once
	file_proto_agent_proto_rawDescData []byte
)

func file_proto_agent_proto_rawDescGZIP() []byte {
	file_proto_agent_proto_rawDescOnce.Do(func() {
		file_proto_agent_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_agent_proto_rawDesc), len(file_proto_agent_proto_rawDesc)))
	})
	return file_proto_agent_proto_rawDescData
}

var file_proto_agent_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_agent_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_proto_agent_proto_goTypes = []any{
	(TunnelMode)(0),           // 0: TunnelMode
	(*RegisterRequest)(nil),   // 1: RegisterRequest
	(*RegisterResponse)(nil),  // 2: RegisterResponse
	(*HeartbeatRequest)(nil),  // 3: HeartbeatRequest
	(*HeartbeatResponse)(nil), // 4: HeartbeatResponse
	(*StreamChunk)(nil),       // 5: StreamChunk
	(*ConnectRequest)(nil),    // 6: ConnectRequest
	(*ConnectResponse)(nil),   // 7: ConnectResponse
	(*HeaderValues)(nil),      // 8: HeaderValues
	(*HttpRequest)(nil),       // 9: HttpRequest
	(*HttpResponse)(nil),      // 10: HttpResponse
	nil,                       // 11: HttpRequest.HeadersEntry
	nil,                       // 12: HttpResponse.HeadersEntry
}
var file_proto_agent_proto_depIdxs = []int32{
	0,  // 0: RegisterRequest.mode:type_name -> TunnelMode
	11, // 1: HttpRequest.headers:type_name -> HttpRequest.HeadersEntry
	12, // 2: HttpResponse.headers:type_name -> HttpResponse.HeadersEntry
	8,  // 3: HttpRequest.HeadersEntry.value:type_name -> HeaderValues
	8,  // 4: HttpResponse.HeadersEntry.value:type_name -> HeaderValues
	1,  // 5: Control.RegisterAgent:input_type -> RegisterRequest
	3,  // 6: Control.Heartbeat:input_type -> HeartbeatRequest
	5,  // 7: Proxy.Tunnel:input_type -> StreamChunk
	6,  // 8: Proxy.Connect:input_type -> ConnectRequest
	2,  // 9: Control.RegisterAgent:output_type -> RegisterResponse
	4,  // 10: Control.Heartbeat:output_type -> HeartbeatResponse
	5,  // 11: Proxy.Tunnel:output_type -> StreamChunk
	7,  // 12: Proxy.Connect:output_type -> ConnectResponse
	9,  // [9:13] is the sub-list for method output_type
	5,  // [5:9] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_proto_agent_proto_init() }
func file_proto_agent_proto_init() {
	if File_proto_agent_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_agent_proto_rawDesc), len(file_proto_agent_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_proto_agent_proto_goTypes,
		DependencyIndexes: file_proto_agent_proto_depIdxs,
		EnumInfos:         file_proto_agent_proto_enumTypes,
		MessageInfos:      file_proto_agent_proto_msgTypes,
	}.Build()
	File_proto_agent_proto = out.File
	file_proto_agent_proto_goTypes = nil
	file_proto_agent_proto_depIdxs = nil
}
